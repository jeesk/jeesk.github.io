<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>山间草夫的小站 Blog</title>
        <link>https://shanjiancaofu.com/devops</link>
        <description>山间草夫的小站 Blog</description>
        <lastBuildDate>Thu, 26 Aug 2021 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <item>
            <title><![CDATA[linux服务器时间同步]]></title>
            <link>https://shanjiancaofu.com/devops/sync-system-time</link>
            <guid>sync-system-time</guid>
            <pubDate>Thu, 26 Aug 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[>  最近发现自己的服务器时间变成了 EDT , 这个是美国东部夏令时间. 那么如何将服务器的时间变成中国的时间,并且同步呢.]]></description>
            <content:encoded><![CDATA[<blockquote><blockquote><p> 最近发现自己的服务器时间变成了 EDT , 这个是美国东部夏令时间. 那么如何将服务器的时间变成中国的时间,并且同步呢.</p></blockquote></blockquote><ol><li>安装 centos 的时间同步工具</li></ol><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">yum -y install ntp</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ol start="2"><li>如果机器的时区不是中国时区需要重新设置时区</li></ol><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">mv /etc/localtime /etc/localtime.bak</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ol start="3"><li>执行同步命令</li></ol><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">同步淘宝的时间服务</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ntpdate ntp1.aliyun.com </span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ol start="4"><li>修改服务器映射到我们系统的时间，ok；</li></ol><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">hwclock --systohc</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ol start="5"><li>增加定时任务同步时间</li></ol><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">crontab -e  进入定时任务 ,  每隔10分钟同步一次系统时间</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*/10 * * * *  /usr/sbin/ntpdate  ntp1.aliyun.com  </span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><blockquote><p> 路过点赞, 月薪10W</p></blockquote>]]></content:encoded>
            <category>linux</category>
        </item>
        <item>
            <title><![CDATA[redis在生产环境的配置]]></title>
            <link>https://shanjiancaofu.com/devops/redis-production-config</link>
            <guid>redis-production-config</guid>
            <pubDate>Sun, 11 Apr 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[持久化配置]]></description>
            <content:encoded><![CDATA[<h5 class="anchor anchorWithStickyNavbar_mojV" id="持久化配置">持久化配置<a class="hash-link" href="#持久化配置" title="Direct link to heading">​</a></h5><ul><li>RDB<div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">save 900 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">save 300 10</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">save 60 10000</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li></ul><h1>写入创建快照失败的时候是否继续执行写命令</h1><p>stop-writes-on-bgsave-error yes</p><h1>快照是否使用压缩</h1><p>rdbcompression yes</p><h1>快照文件目录名称</h1><p>dbfilename dump.rdb</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">-  AOF</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h1>是否开启aof 模式</h1><p>appendonly yes</p><h1>增量备份频率. 每秒</h1><p>appendfsync  everysec</p><h1>aof 压缩 ( master 推荐设置) 是否后台重写日志, 对性能有要求建议配置yes , 否则重写日志的时候有卡顿</h1><p>no-appendfsync-on-rewrite yes</p><h1>aof文件增长比例，指当前aof文件比上次重写的增长比例大小</h1><p>auto-aof-rewrite-percentage</p><h1>aof 日志重写的最小比例</h1><p>auto-aof-rewrite-min-size 64mb</p><h1>redis 被加载回内存的时候, 可能崩溃. 因为aof文件可能有错误, 如果配置为yes 将会忽略错误, 并且redis 将发出一个日志通知用户. 如果配置为no,  那么redis 将无法重启, 这个时候需要手动执行redis check aof 来修复aof 文件, 修复完成后才能重启</h1><p>aof-load-truncated yes</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">-  bind 配置</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   redis本身无法限制【只有指定主机】连接到redis中，就像我上面说的一样，bind指定只是用来设置接口地址（interfaces）。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p> 1.如果你的bind设置为：bind 127.0.0.1，这是非常安全的，因为只有本台主机可以连接到redis，就算不设置密码，也是安全的，除非有人登入到你的服务器上。</p><p>  2.如果你的bind设置为：bind 0.0.0.0，表示所有主机都可以连接到redis。（前提：你的服务器必须开放redis的端口）。这时设置密码，就会多一层保护，只有知道密码的才可以访问。也就是任何知道密码的主机都可以访问到你的redis。
3. 如果你bind 绑定本地网卡比如 118.18.19.12 , name流量只能从这个ip来. </p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">#####  运维建议:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1.  凌晨手动执行bgrewriteaof 执行, 备份快照</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div>]]></content:encoded>
            <category>redis</category>
        </item>
        <item>
            <title><![CDATA[Zookeeper集群安装教程]]></title>
            <link>https://shanjiancaofu.com/devops/install-zookeeper-cluster-lesson</link>
            <guid>install-zookeeper-cluster-lesson</guid>
            <pubDate>Mon, 01 Mar 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[安装前置条件]]></description>
            <content:encoded><![CDATA[<blockquote><p> 安装前置条件</p><ul><li>3台安装JDK 8 的虚拟机,假设地址分别是192.168.17.81,192.168.17.82,192.168.17.83</li></ul></blockquote><p>zookeeper 发行版页面, 有许多版本的发行版的下载链接,可以根据不同的版本,下载不同的链接
<code>https://zookeeper.apache.org/releases.html</code></p><ol><li>$\color{#FF0000}{修改 hosts }$</li></ol><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">vim /etc/hosts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">加入一下内容</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">192.168.17.81 zk01</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">192.168.17.82 zk02</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">192.168.17.83 zk03</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>后面我将使用zk01 代替192.168.17.81
2.   $\color{#FF0000}{在zk01机器上面下载zookeeper}$</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">mkdir -p /opt/soft/ &amp;&amp; cd  /opt/soft</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">wget  https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2-bin.tar.gz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">如果机器没有安装wget, 那么执行下面命令安装</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">yum -y install wget</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ol start="3"><li>$\color{#FF0000}{分发zoookeeper软件 到另外两台机器}$</li></ol><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">1. 首先在另外两台机器创建目录</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mkdir -p /opt/soft/ &amp;&amp; cd  /opt/soft</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2. 在zk01 的/opt/soft 的目录下执行</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">scp apache-zookeeper-3.6.2-bin.tar.gz root@zk02:/opt/soft/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">scp apache-zookeeper-3.6.2-bin.tar.gz root@zk03:/opt/soft/</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ol start="4"><li>$\color{#FF0000}{解压文件}$<ol><li>在3台的机器的/opt/soft/ 文件夹执行解压命令
<code>  tar -zxvf  apache-zookeeper-3.6.2-bin.tar.gz </code></li><li>在3台的机器的/opt/soft/ 继续执行软连接
<code>ln -s /opt/soft/apache-zookeeper-3.6.2-bin  zookeeper</code></li><li>创建需要的数据文件夹,和日志文件夹, 在后面的配置文件使用需要
<code>cd zookeeper &amp;&amp; mkdir {data,log}</code></li></ol></li><li>$\color{#FF0000}{增加配置文件}$
在zk01上 的<code>/opt/soft/zookeeper-3.5.2-alpha/conf</code>增加 zoo.cfg文件,文件内容如下<div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">  initLimit=10</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  syncLimit=5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  clientPort=2181</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  tickTime=2000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dataDir=/opt/soft/apache-zookeeper-3.6.2-bin/data/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dataLogDir=/opt/apache-zookeeper-3.6.2-bin/logs/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dynamicConfigFile=/opt/soft/apache-zookeeper-3.6.2-bin/conf/zoo.cfg.dynamic.100000000</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li></ol><ul><li>在/opt/soft/zookeeper-3.5.2-alpha/conf 增加配置zoo.cfg.dynamic.100000000 文件, 这个文件是说明zk 的集群机器的ip地址,文件内容如下</li></ul><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">server.1=zk01:2888:3888:participant</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">server.2=zk02:2888:3888:participant</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">server.3=zk03:2888:3888:participant</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ul><li>将这个两个文件分发到zk02,zk03,在zk01 的/opt/soft/zookeeper-3.5.2-alpha/conf/ 执行命令</li></ul><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">scp zoo.cfg root@zk02:/opt/soft/zookeeper-3.5.2-alpha/conf/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">scp zoo.cfg root@zk02:/opt/soft/zookeeper-3.5.2-alpha/conf/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">scp zoo.cfg.dynamic.100000000 root@zk03:/opt/soft/zookeeper-3.5.2-alpha/conf/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">scp zoo.cfg.dynamic.100000000 root@zk03:/opt/soft/zookeeper-3.5.2-alpha/conf/</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ol start="6"><li><p>$\color{#FF0000}{增加每一台机器的标识 }$
在3台机器上面的 <code>/opt/soft/zookeeper-3.5.2-alpha/conf/data</code> 执行命令
zk01 执行  <code>echo 1 &gt; myid</code>
zk02 执行  <code>echo 2 &gt; myid</code>
zk03 执行  <code>echo 3 &gt; myid</code></p></li><li><p>$\color{#FF0000}{常用命令 }$</p></li></ol><p>在3 台机器的 <code>/opt/soft/zookeeper-3.5.2-alpha/bin/ </code> 执行</p><ul><li>启动命令  <code>./zkServer.sh start </code></li><li>查看启动状态 <code>./zkServer.sh status </code>  </li></ul><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">ZooKeeper JMX enabled by default</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Using config: /opt/soft/zookeeper-3.5.2-alpha/bin/../conf/zoo.cfg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Client port found: 2181. Client address: localhost.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mode: follower</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">------------------- 192.168.17.82 -------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ZooKeeper JMX enabled by default</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Using config: /opt/soft/zookeeper-3.5.2-alpha/bin/../conf/zoo.cfg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Client port found: 2181. Client address: localhost.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mode: leader</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">------------------- 192.168.17.83 -------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ZooKeeper JMX enabled by default</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Using config: /opt/soft/zookeeper-3.5.2-alpha/bin/../conf/zoo.cfg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Client port found: 2181. Client address: localhost.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mode: followe</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ul><li>关闭命令: <code>./zkServer.sh status</code></li></ul><ol start="8"><li>$\color{#FF0000}{常见问题:}$</li></ol><ul><li>确保3台机器的防火墙端口2181 已经放开, 如果是本地环境建议直接<code>service fillwalld stop</code> 关闭防火墙</li><li>3台机器分别执行太麻烦, 参考 zookeeper  <a href="https://www.jianshu.com/p/f2d1e2cba91d" target="_blank" rel="noopener noreferrer">集群脚本</a> <blockquote><p>完结撒花, 路过点赞, 月入10 W!</p></blockquote></li></ul>]]></content:encoded>
            <category>zookeeper</category>
        </item>
        <item>
            <title><![CDATA[Zookeeper一键群启脚本]]></title>
            <link>https://shanjiancaofu.com/devops/zookeeper-cluster-start-script</link>
            <guid>zookeeper-cluster-start-script</guid>
            <pubDate>Sat, 09 Jan 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[为了方便管理zookeeper 集群, 我们写了一个zookeeper 脚本]]></description>
            <content:encoded><![CDATA[<blockquote><p>   为了方便管理zookeeper 集群, 我们写了一个zookeeper 脚本</p></blockquote><ol><li>在bin/zkEnv.sh文件中,zk 增加JAVA_HOME .(有些时候无法找到JAVA_HOME,所以先增加JAVA_HOME)<div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">ZOOBINDIR="${ZOOBINDIR:-/usr/bin}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ZOOKEEPER_PREFIX="${ZOOBINDIR}/.."</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#在上面的2段文字下面增加 JAVA_HOME, 下面的路径是你的 jdk HOME目录</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export JAVA_HOME=/opt/soft/jdk1.8.0_161</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li></ol><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">2.  3 台机器免密登录, 分别为zk01,zk02,zk03</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h1>zk01 执行</h1><p>ssh-copy-id root@zk02
ssh-copy-id root@zk03</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h1>zk02 执行</h1><p>ssh-copy-id root@zk01
ssh-copy-id root@zk03</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h1>zk03 执行</h1><p>ssh-copy-id root@zk01
ssh-copy-id root@zk02</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">这个时候, 你可以使用 在任意一台机器上面执行免密登录</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">3.  在2台机器下面的 bin 目录下面增加  zkCluster.sh</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>#!/bin/bash</p><p>red='\e[91m'
green='\e[92m'
yellow='\e[93m'
magenta='\e[95m'
cyan='\e[96m'
none='\e[0m'</p><p>zk_home=$zk_home
cluster_array=(192.168.17.81 192.168.17.82 192.168.17.83)</p><h1>1. 获取输入参数个数，如果没有参数，直接退出</h1><p>if (($# == 0)); then
echo -e ------------------- ${yellow}no args${none} -------------------
exit
fi</p><h1>2. 根据指令循环操作集群</h1><p>case $1 in
"start") {
for host in ${cluster_array<!-- -->[@]<!-- -->}; do
echo -e ------------------- $yellow$host$none -------------------
ssh $host "$zk_home/bin/zkServer.sh start"
done
} ;;</p><p>"stop") {
for host in ${cluster_array<!-- -->[@]<!-- -->}; do
echo -e ------------------- $yellow$host$none -------------------
ssh $host "$zk_home/bin/zkServer.sh stop"
done
} ;;</p><p>"status") {
for host in ${cluster_array<!-- -->[@]<!-- -->}; do
echo -e ------------------- $yellow$host$none -------------------
ssh $host "$zk_home/bin/zkServer.sh status"
done
} ;;</p><p>esac</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">上面的 cluster_array 就是你的3台机器ip ,也可以使用别名代替</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">这个时候, 你可以在任意一台机器的zk bin目录下面执行</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-  群启动: ./zkCluster.sh start </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-  群关闭: ./zkCluster.sh stop </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-  群查看状态: ./zkCluster.sh status </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">如果脚本没有执行权限, 增加执行权限 `chmod u+x zkCluster.sh`  即可.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;  完结撒花, 路过点赞, 月入10W !</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div>]]></content:encoded>
            <category>zookeeper</category>
        </item>
        <item>
            <title><![CDATA[git 删除误上传的.idea文件]]></title>
            <link>https://shanjiancaofu.com/devops/delete-git-file-on-idea</link>
            <guid>delete-git-file-on-idea</guid>
            <pubDate>Wed, 12 Aug 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[问题：]]></description>
            <content:encoded><![CDATA[<p>问题：
提交项目的时候忘记添加.gitignore文件，误上传了文件(如.idea)如何解决？(本文以.idea文件夹举例)</p><p>1.将项目文件拉取下来
git pull origin master</p><p>2.添加需要过滤的文件
a. 如果你有.gitignore文件，但是没添加误上传的文件夹(如.idea)
新起一行添加  .idea/
b. 如果你没有.gitignore文件，在你的项目里创建一个.gitignore的文件
将下面的文本放入即可
通用.gitignore文件</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Initially taken from Github's Python gitignore file</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Byte-compiled / optimized / DLL files</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">__pycache__/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*.py[cod]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*$py.class</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">__pycache__</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># C extensions</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*.so</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.DS_Store</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.idea/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Distribution / packaging</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.Python</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">build/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">develop-eggs/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dist/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">downloads/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">eggs/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.eggs/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">lib/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">lib64/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">parts/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sdist/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">var/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">wheels/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*.egg-info/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.installed.cfg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*.egg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">MANIFEST</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># PyInstaller</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#  Usually these files are written by a python script from a template</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#  before PyInstaller builds the exe, so as to inject date/other infos into it.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*.manifest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*.spec</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Installer logs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pip-log.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pip-delete-this-directory.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Unit test / coverage reports</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">htmlcov/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.tox/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.nox/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.coverage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.coverage.*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.cache</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nosetests.xml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">coverage.xml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*.cover</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.hypothesis/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.pytest_cache/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Translations</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*.mo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*.pot</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Django stuff:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*.log</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">local_settings.py</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db.sqlite3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Flask stuff:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">instance/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.webassets-cache</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Scrapy stuff:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.scrapy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Sphinx documentation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">docs/_build/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># PyBuilder</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">target/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Jupyter Notebook</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.ipynb_checkpoints</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># IPython</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">profile_default/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ipython_config.py</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># pyenv</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.python-version</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># celery beat schedule file</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">celerybeat-schedule</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># SageMath parsed files</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*.sage.py</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Environments</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.env</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.venv</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">env/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">venv/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ENV/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">env.bak/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">venv.bak/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Spyder project settings</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.spyderproject</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.spyproject</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Rope project settings</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.ropeproject</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># mkdocs documentation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/site</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># mypy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.mypy_cache/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.dmypy.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dmypy.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Pyre type checker</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.pyre/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">data/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">model/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>3.打开项目终端执行命令</p><h1>删除github上的误上传文件.idea</h1><p>git rm -rf --cached .idea</p><p>4.提交.gitignore文件
git add .gitignore
5.上传
git commit -m '忽略idea'
git push -u origin master</p>]]></content:encoded>
            <category>git</category>
        </item>
        <item>
            <title><![CDATA[kafka 生产推荐配置]]></title>
            <link>https://shanjiancaofu.com/devops/kafka-production-config</link>
            <guid>kafka-production-config</guid>
            <pubDate>Fri, 12 Jun 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[Broker]]></description>
            <content:encoded><![CDATA[<p>Broker</p><div class="codeBlockContainer_I0IT language-shell theme-code-block"><div class="codeBlockContent_wNvx shell"><pre tabindex="0" class="prism-code language-shell codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">delete.topic.enable</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">true                </span><span class="token comment" style="color:#999988;font-style:italic">#允许删除topic</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">num.replica.fetchers</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">2</span><span class="token plain">                  </span><span class="token comment" style="color:#999988;font-style:italic"># kakfa的线程数量配置</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">offsets.topic.replication.factor</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">2</span><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic"># offset的副本，防止丢失</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">num.partitions</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">8</span><span class="token plain">                        </span><span class="token comment" style="color:#999988;font-style:italic"># 分区数量</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">auto.create.topics.enable</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">true          </span><span class="token comment" style="color:#999988;font-style:italic"># 开启自动提交</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">default.replication.factor</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">2</span><span class="token plain">            </span><span class="token comment" style="color:#999988;font-style:italic"># 默认副本数量</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">log.retention.hours</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">48</span><span class="token plain">                  </span><span class="token comment" style="color:#999988;font-style:italic"># 日志保留2天</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">min.insync.replicas</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">2</span><span class="token plain">                   </span><span class="token comment" style="color:#999988;font-style:italic"># 最少同步副本</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Producer
在Spring boot中的配置</p><div class="codeBlockContainer_I0IT language-shell theme-code-block"><div class="codeBlockContent_wNvx shell"><pre tabindex="0" class="prism-code language-shell codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">spring:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  kafka:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    bootstrap-servers: </span><span class="token number" style="color:#36acaa">192.168</span><span class="token plain">.31.31:9092</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    producer:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic"># 重试次数</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      retries: </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic"># 应答级别:多少个分区副本备份完成时向生产者发送ack确认(可选0、1、all/-1)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic"># 这里使用0 是折中的考虑</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      acks: </span><span class="token string" style="color:#e3116c">"0"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic"># 批量大小</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      batch-size: </span><span class="token number" style="color:#36acaa">16384</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      properties:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># 开启幂等性, 后ack 为all, 这个性能会降低.,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        enable.idempotence: </span><span class="token boolean" style="color:#36acaa">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        linger.ms: </span><span class="token number" style="color:#36acaa">50</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        partitioner.class: org.apache.kafka.clients.producer.RoundRobinPartitioner</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      buffer-memory: </span><span class="token number" style="color:#36acaa">33554432</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      key-serializer: </span><span class="token string" style="color:#e3116c">"org.apache.kafka.common.serialization.StringSerializer"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      value-serializer: </span><span class="token string" style="color:#e3116c">"org.apache.kafka.common.serialization.StringSerializer"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">#  事务场景开启事务 , 否则会报错</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic"># transaction-id-prefix: "kt"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      client-id: </span><span class="token variable" style="color:#36acaa">${spring.application.name}</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div>]]></content:encoded>
            <category>kafka</category>
        </item>
        <item>
            <title><![CDATA[git提供规范（参考deepin 和jenkins)]]></title>
            <link>https://shanjiancaofu.com/devops/git-commit-standard</link>
            <guid>git-commit-standard</guid>
            <pubDate>Sat, 16 May 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[在日常开发中，开发在使用git的时候请参考以下规范，能够提高项目的搜索git log的效率，以下仅供参考。]]></description>
            <content:encoded><![CDATA[<p>在日常开发中，开发在使用git的时候请参考以下规范，能够提高项目的搜索git log的效率，以下仅供参考。</p><ol><li>Git commit -m "使用的词语"</li></ol><p>修复
发布
更改
去掉
加
实行
启用
提高
重构
更新
使
降低</p><p>使用 直接使用 git commit 在gun nano 里面编辑</p><ol start="2"><li>重复使用上一次的commit,新增加commit
echo "I love git" &amp;&amp; git commit --allow-empty --amend</li></ol><p>增加提交,但是不提交任何信息
echo "I am a git" &amp;&amp; git commit --allow-empty-message --no-edit</p>]]></content:encoded>
            <category>git</category>
        </item>
        <item>
            <title><![CDATA[开发必须掌握的git使用场景]]></title>
            <link>https://shanjiancaofu.com/devops/use-git</link>
            <guid>use-git</guid>
            <pubDate>Tue, 03 Mar 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[常用场景:]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_mojV" id="常用场景">常用场景:<a class="hash-link" href="#常用场景" title="Direct link to heading">​</a></h2><blockquote><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">想想下列工作场景时候是你经常遇见的? </span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></blockquote><ol><li><p><strong>我们可能为了保持工作空间clean, 会commit多次,但是很多时候commit的内容是没有什么意义的. 这个时候我们需要合并commit.</strong></p></li><li><p><strong>领导叫我去另外一个分支去修改内容, 我要保存当前的分支的内容.</strong></p></li><li><p><strong>前几次提交的commit还没push, 我想回滚.</strong></p></li><li><p><strong>有些文件我不想提交到git仓库</strong></p></li></ol><h2 class="anchor anchorWithStickyNavbar_mojV" id="合并或者修改coomit">合并或者修改coomit<a class="hash-link" href="#合并或者修改coomit" title="Direct link to heading">​</a></h2><p>有的时候我们提交commit 的备注的时候可能没有写备注,或者是备注写错了,这个时候我们需要修改commit, 这个时候--amend 计算非常有用了. 无论是否提交到远端服务器 git commit --amend 都可以修改最近一次的提交.</p><ol><li>修改commit内容</li></ol><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">一、如果已经push到远端服务器，想修改已经提交过的commit信息  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">1</span><span class="token plain">.保存:Ctrl + o</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> 回车 </span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">退出:Ctrl + x   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># git commit --amend  </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">2</span><span class="token plain">.重新提交gerrit审批  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># git push --no-thin origin HEAD:refs/for/master  </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">二、如果已经push到远端服务器,有漏掉的test.txt文件想提交到上一次的commit信息  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">1</span><span class="token plain">.添加test.txt  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># git add test.txt  </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">2</span><span class="token plain">.修改commit信息</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">保存:Ctrl + o</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> 回车 </span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">退出:Ctrl + x   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># git commit --amend  </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">3</span><span class="token plain">.重新push到远端服务器  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># git push --no-thin origin HEAD:refs/for/master </span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ol start="2"><li>合并commit</li></ol><blockquote><p> 由于我们可能为了保持工作空间clean, 会commit多次,但是很多时候commit的内容是没有什么意义的. 这个时候我们需要合并commit.</p><p> 被合并过的commit 是不能再次被合并的I</p></blockquote><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">HEAD~ 后面表示最近多少次提交</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git rebase -i HEAD~3   </span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">pick d6d290e </span><span class="token number" style="color:#36acaa">123123</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pick 5c7ee5a </span><span class="token number" style="color:#36acaa">12321</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pick 2e4ed64 </span><span class="token number" style="color:#36acaa">12321</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>简单的解释一下:</p><p>前面三行是我们需要操作的三个 Commit，每行最前面的是对该 Commit 操作的 Command。关于每个 Command 具体做什么，下面的注释写得非常清楚。为了完成我们的需求，我们可以关注到这两个命令：</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">1. s, squash = use commit, but meld into previous commit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2. f, fixup = like "squash", but discard this commit's log message</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   翻译:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- squash：使用该 Commit，但会被合并到前一个 Commit 当中</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- fixup：就像 squash 那样，但会抛弃这个 Commit 的 Commit message</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>看样子两个命令都可以完成我们的需求，那么让我们先试一下 squash！由于我们是想把三个 Commit 都合并在一起，并且使 Commit Message 写成 Commit-1，所以我们需要把 5c7ee5a(12321) 和 2e4ed64(12321) 前面的 pick 都改为squash，于是它看起来像这样：</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">pick d6d290e </span><span class="token number" style="color:#36acaa">123123</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pick 5c7ee5a </span><span class="token number" style="color:#36acaa">12321</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pick 2e4ed64 </span><span class="token number" style="color:#36acaa">12321</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#当然，因为我很懒，所以通常我会使用它的缩写：</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pick d6d290e </span><span class="token number" style="color:#36acaa">123123</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">s 5c7ee5a </span><span class="token number" style="color:#36acaa">12321</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">s 2e4ed64 </span><span class="token number" style="color:#36acaa">12321</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">然后执行 :wx ,保存. git又会打开合并备注的vim操作</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># This is a combination of 3 commits.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># This is the 1st commit message:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">123123</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># This is the commit message #2:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">12321</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#### 后面的内容已经省略</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>这个时候我们就可以修改上面的备注, 然后执行 : wx.</p><p>然后查看提交记录:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">git</span><span class="token plain"> log</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>就会发现提交记录已经被合并了.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="保存工作空间现场">保存工作空间现场<a class="hash-link" href="#保存工作空间现场" title="Direct link to heading">​</a></h2><blockquote><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">在开发中，会经常碰到bug问题，那么有了bug就需要修复，在Git中，分支是很强大的，每个bug都可以通过一个临时分支来修复，修复完成后，合并分支，然后将临时的分支删除掉。</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>比如我在开发中接到一个bug时候，我们可以创建一个bug1分支来修复它，但是，当前的dev分支上的工作还没有提交。比如如下：</p><p>并不是我不想提交，而是工作进行到一半时候，我们还无法提交，比如我这个分支bug要2天完成，但是我bug1需要5个小时内完成(分支是可以提交的,不过增加了多余的commit信息, 这时候就可以使用stash 命令)。怎么办呢？还好，Git还提供了一个stash功能，可以把当前工作现场 ”隐藏起来”，等以后恢复现场后继续工作。如下：</p></blockquote><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">git stash apply    恢复，恢复后，stash内容并不删除，你需要使用命令git stash drop来删除。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">另一种方式是使用git stash pop,恢复的同时把stash内容也删除了。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">需注意上面那句话所对作用范围的定义，如果你的文件没add，即没有“被跟踪”和“暂存”，stash是不会帮你保存的。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">（1）git stash save "save message"  : 执行存储时，添加备注，方便查找，只有git stash 也要可以的，但查找时不方便识别。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">（2）git stash list  ：查看stash了哪些存储</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">（3）git stash show ：显示做了哪些改动，默认show第一个存储,如果要显示其他存贮，后面加stash@{$num}，比如第二个 git stash show stash@{1}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">（4）git stash show -p : 显示第一个存储的改动，如果想显示其他存存储，命令：git stash show  stash@{$num}  -p ，比如第二个：git stash show  stash@{1}  -p</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">（5）git stash apply :应用某个存储,但不会把存储从存储列表中删除，默认使用第一个存储,即stash@{0}，如果要使用其他个，git stash apply stash@{$num} ， 比如第二个：git stash apply stash@{1} </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">（6）git stash pop ：命令恢复之前缓存的工作目录，将缓存堆栈中的对应stash删除，并将对应修改应用到当前的工作目录下,默认为第一个stash,即stash@{0}，如果要应用并删除其他stash，命令：git stash pop stash@{$num} ，比如应用并删除第二个：git stash pop stash@{1}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">（7）git stash drop stash@{$num} ：丢弃stash@{$num}存储，从列表中删除这个存储</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">（8）git stash clear ：删除所有缓存的stash</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h2 class="anchor anchorWithStickyNavbar_mojV" id="回滚或者丢失不想要的内容">回滚或者丢失不想要的内容<a class="hash-link" href="#回滚或者丢失不想要的内容" title="Direct link to heading">​</a></h2><blockquote><p>用Git的时候commit提交代码后，发现这一次commit的内容是有错误的，或者不想提交了,那么有两种处理方法：</p><p> 1、修改错误内容，再次commit一次</p><p>2、使用<strong>git reset</strong> 命令撤销这一次错误的commit 第一种方法比较直接，但会多次一次commit记录。 我个人认为 第二种更加好点, 错误的commit就没有必要提交了.</p></blockquote><ol><li>如果你只是想撤销 commit, 但是保留 add. (此时文件的变动也会被保留)</li></ol><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">git reset --soft HEAD^</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>注意了: HEAD^ 上个版本,HEAD~2 上上个版本miced commitId</p><ol start="2"><li>删除工作空间改动代码，撤销commit，撤销git add</li></ol><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">git reset --hard HEAD^</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ol start="3"><li>不删除工作空间改动代码，撤销commit，并且撤销git add(常用)</li></ol><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">git reset --mixed HEAD^ 或者git reset HEAD^</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ol start="4"><li>还没有commit, 但是已经 add. , 只想撤销 add</li></ol><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">-- filename 是指单个文件名</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git reset HEAD filename</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">全部：git reset HEAD</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ol start="5"><li>不想保留本地文件的的改变.</li></ol><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">git checkout filename</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ol start="6"><li>git命令对各个区的影响</li></ol><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">git add.     将工作区的文件添加到缓存区域</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git commit  是将缓存区的内容增加到本地仓库</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git checkout --file  是将工作区的内容丢弃</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git reset --hard HEAD^    是将当前的index 直接指向上一个版本, 并且将 暂存区,仓库,工作区的内容变动全部删除.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git reset --mixed HEAD^ 或者git reset HEAD^     将缓存区,本地仓库的变动删除, 但是保留工作区的文件的变动.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git reset --soft HEAD^    表示本地仓库的 commit的内容丢弃,保留本地和缓存区的变动.</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h2 class="anchor anchorWithStickyNavbar_mojV" id="不想提交某些文件到仓库">不想提交某些文件到仓库<a class="hash-link" href="#不想提交某些文件到仓库" title="Direct link to heading">​</a></h2><blockquote><p> 在项目中,有些文件不需要上传, 比如java的字节码文件 , log日志文件是不需要上传到git服务器器的,那么这个时候,就可以在项目的根目录下面创建.gitignore 文件, 把不需要上传的文件忽略掉即可.</p></blockquote><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">.在使用Git管理代码的过程中，可以修改.gitignore文件中的标示的方法来忽略开发者想忽略掉的文件或目录，如果没有.gitignore文件，可以自己手工创建。在.gitignore文件中的每一行保存一个匹配的规则例如：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 此为注释 – 将被 Git 忽略</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*.a       </span><span class="token comment" style="color:#999988;font-style:italic"># 忽略所有 .a 结尾的文件</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">!</span><span class="token plain">lib.a    </span><span class="token comment" style="color:#999988;font-style:italic"># 但 lib.a 除外</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/TODO     </span><span class="token comment" style="color:#999988;font-style:italic"># 仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">build/    </span><span class="token comment" style="color:#999988;font-style:italic"># 忽略 build/ 目录下的所有文件</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">doc/*.txt </span><span class="token comment" style="color:#999988;font-style:italic"># 会忽略 doc/notes.txt 但不包括 doc/server/arch.txt</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">在填写忽略文件的过程中，我发现.gitignore中已经标明忽略的文件目录下的文件，当我想git push的时候还会出现在push的目录中，原因是因为git忽略目录中，新建的文件在git中会有缓存，如果某些文件已经被纳入了版本管理中，就算是在.gitignore中已经声明了忽略路径也是不起作用的，这时候我们就应该先把本地缓存删除，然后再进行git push，这样就不会出现忽略的文件了。git清除本地缓存命令如下：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">git</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">rm</span><span class="token plain"> -r --cached </span><span class="token builtin class-name">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">git</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> </span><span class="token builtin class-name">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">git</span><span class="token plain"> commit -m </span><span class="token string" style="color:#e3116c">'update .gitignore'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">还有一种情况, 就是发现某个文件,已经写到了.gitignore中 , 但是已经上传到了,git服务器上面. </span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>那么这个文件, 无论你怎么修改,每次上传都是会被忽略掉的.但是呢, 项目中又存在这种文件, 这种文件一般是本地开发的配置文件. 如果你重新让<code>.gitignore</code>文件生效, 那么先前忽略的文件会被删除掉, 也就是说, 以前文件存在,<code> .gitignore</code>填写的配置不生效. 但是现在你删除了缓存,<code>.gitignore</code>文件生效了, 那么会导致原来的文件丢失. 这个是我亲身经历过的. 一定要注意,这种问题发生, 导致丢失不必要的配置文件.</p><p>git checkout origin/2.1.0-llw  拉趣远程分支</p><p>git checkout --track origin/branch_name  建立关联
git branch --set-upstream-to   remotes/origin/news</p><p>git branch --set-upstream-to=origin/rzzm_202011208 rzzm_202011208</p><p><strong>参考:</strong></p><ul><li><a href="https://git-scm.com/book/zh/v1" target="_blank" rel="noopener noreferrer">GIT官方文档</a></li></ul>]]></content:encoded>
            <category>git</category>
        </item>
        <item>
            <title><![CDATA[linux压测配置优化]]></title>
            <link>https://shanjiancaofu.com/devops/linux-opt</link>
            <guid>linux-opt</guid>
            <pubDate>Tue, 01 Oct 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[很多时候我们在linux上面压测的时候，在排除网卡和其它的因素后要看一下是否是因为linux本身的限制，在linux中一切皆是文件]]></description>
            <content:encoded><![CDATA[<blockquote><p>  很多时候我们在linux上面压测的时候，在排除网卡和其它的因素后要看一下是否是因为linux本身的限制，在linux中一切皆是文件
所以我们要优化一下linux的相关参数</p></blockquote><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain"> vim /etc/security/limits.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">* soft nofile 500000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">* hard nofile 500000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">root soft nofile 500000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">root hard nofile 500000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>执行命令</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain"> echo 5 &gt; /proc/sys/net/ipv4/tcp_fin_timeout</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> echo 1 &gt; /proc/sys/net/ipv4/tcp_tw_recycle</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> echo 1 &gt; /proc/sys/net/ipv4/tcp_tw_reuse</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>替换lib 包jar -xvf .\my-test.jar
jar -cfM0 my-test.jar ./</p><p>{% dplayer "url=<a href="http://home.ustc.edu.cn/~mmmwhy/GEM.mp4%22" target="_blank" rel="noopener noreferrer">http://home.ustc.edu.cn/~mmmwhy/GEM.mp4"</a>  "pic=<a href="http://home.ustc.edu.cn/~mmmwhy/GEM.jpg%22" target="_blank" rel="noopener noreferrer">http://home.ustc.edu.cn/~mmmwhy/GEM.jpg"</a> "loop=yes" "theme=#FADFA3" "autoplay=false" "token=tokendemo" %}</p>]]></content:encoded>
            <category>redis</category>
        </item>
        <item>
            <title><![CDATA[Storm-集群搭建入门]]></title>
            <link>https://shanjiancaofu.com/devops/install-cluster-apache-storm</link>
            <guid>install-cluster-apache-storm</guid>
            <pubDate>Mon, 08 Jul 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[前置工作]]></description>
            <content:encoded><![CDATA[<h4 class="anchor anchorWithStickyNavbar_mojV" id="前置工作">前置工作<a class="hash-link" href="#前置工作" title="Direct link to heading">​</a></h4><ol><li>3台 安装JDK 8的虚拟机</li><li>3台机器安装 zookeeper 集群的机器</li><li>修改hosts 如下,假设我们有3 台机器,ip 192.168.17.81,192.168.17.82,192.168.17.83, 修改hosts文件</li></ol><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">192.168.17.81 zk01 kafka01 storm01</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">192.168.17.82 zk02 kafka02 storm02</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">192.168.17.83 zk03 kafka03 storm03</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ol><li>下载storm 安装包
打开storm 发行版页面 <code>http://storm.apache.org/downloads.html</code>, 选取一个storm 的二进制下载 ```</li></ol><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">wget  https://www.apache.org/dyn/closer.lua/storm/apache-storm-2.2.0/apache-storm-2.2.0.tar.gz</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ol start="2"><li>分发解压</li></ol><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain"># 在storm01 的机器上面执行, 3 台机器记得配置互相免密登录</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> scp apache-storm-2.2.0.tar.gz root@storm02:/opt/soft/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> scp apache-storm-2.2.0.tar.gz root@storm03:/opt/soft/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#  在3 台机器对应的目录执行解压, 软连接</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tar -zxvf apache-storm-2.2.0.tar.gz  &amp;&amp; ln -s  /opt/soft/apache-storm-2.2.0 storm</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ol start="3"><li>修改配置
在storm01 的 /opt/soft/storm/conf 目录下执行一面的操作</li></ol><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">cp storm.yaml storm.yaml.bak</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vim storm.yaml</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>文件里面粘贴如下内容</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">#  storm 的3台机器</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">storm.zookeeper.servers:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        - "storm01"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        - "storm02"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        - "storm03"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 配置nimbus 机器的IP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nimbus.host:    "storm01"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 配置对应组件的jvm 内存</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nimbus.childopts:       "-Xmx1024m"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">supervisor.childopts:   "-Xmx1024m"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">worker.childopts:       "-Xmx1024m"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ui.childopts:   "-Xmx768m"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 配置supervisor 的端口</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">supervisor.slots.ports:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        -       6700</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        -       6701</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        -       6702</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        -       6703</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 配置storm ui的端口, 这个端口是nimbus 机器上启动的ui. </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ui.port: 9999</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>将storm.yaml, 分发到另外2台机器上面</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">scp storm.yaml root@storm02:/opt/soft/storm/conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">scp storm.yaml root@storm03:/opt/soft/storm/conf</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ol start="4"><li>相关命令在storm 的bin目录执行</li></ol><ul><li>启动nimbus:  <code>./storm nimbus </code></li><li>启动storm ui:  <code>./storm ui</code></li><li>启动supervisor:  <code>./storm supervisor</code></li><li>启动拓扑: <code>./storm jar xxxxx.jar  拓扑名称</code></li><li>杀死拓扑: <code>./storm kill 拓扑名称 -w 10</code> , 执行kill 命令可以通过-2
等待秒数,执行停用以后的等待时间</li></ul><ul><li>停用任务:  <code>./storm deactivte 拓扑名称</code></li></ul><ul><li>启用任务: <code>./storm activate 拓扑名</code></li><li>重新部署任务: <code>./storm rebalance 拓扑名</code>
注意, 启动nimbus, ui 的命令只能在nimbus 的机器上面执行, 启动supervisor 只能在另外2台机器上面执行.<br>上面storm ui的访问地址 http://storm01:9999/index.html</li></ul><blockquote><p> 完结撒花,路过点赞, 月入10W .</p></blockquote>]]></content:encoded>
            <category>storm</category>
        </item>
        <item>
            <title><![CDATA[NFS在linux下面的简单使用]]></title>
            <link>https://shanjiancaofu.com/devops/nfs-use</link>
            <guid>nfs-use</guid>
            <pubDate>Fri, 05 Apr 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[最近遇到了点问题，项目本来以为不会部署多个站点，上传文件之类的就直接配置到本机的目录下了，这样一来部署多个站点也没有公用的文件服务器，坏事了，网上一找办法，nfs能解决这个问题，那就开始试一试。]]></description>
            <content:encoded><![CDATA[<p>最近遇到了点问题，项目本来以为不会部署多个站点，上传文件之类的就直接配置到本机的目录下了，这样一来部署多个站点也没有公用的文件服务器，坏事了，网上一找办法，nfs能解决这个问题，那就开始试一试。</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="环境介绍">环境介绍：<a class="hash-link" href="#环境介绍" title="Direct link to heading">​</a></h2><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">服务器：CentOS 6.4_64 server ip：10.1.1.52 服务器：CentOS 6.4_64 client ip：10.1.1.47</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h2 class="anchor anchorWithStickyNavbar_mojV" id="安装nfs两台均安装">安装nfs(两台均安装)<a class="hash-link" href="#安装nfs两台均安装" title="Direct link to heading">​</a></h2><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">yum install nfs-utils rpcbind</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h2 class="anchor anchorWithStickyNavbar_mojV" id="服务端配置">服务端配置<a class="hash-link" href="#服务端配置" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_mojV" id="1创建共享目录">1、创建共享目录<a class="hash-link" href="#1创建共享目录" title="Direct link to heading">​</a></h3><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">mkdir /home/test</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>2、NFS文件配置</p><p>vi /etc/exports</p><p>增加如下一行：</p><p><code>/home/test/&nbsp;10.1.1.47(rw,no_root_squash,no_all_squash,sync)</code></p><p><code>使配置生效</code></p><p><em><code>exportfs -rv</code></em></p><p>注：配置文件说明：&nbsp;</p><p>/usr/local/test/ 为共享的目录，使用绝对路径。
NFS_Client_IP(rw,no_root_squash,no_all_squash,sync)为客户端的地址及权限，地址可以是一个网段，一个IP地址或者是一个域名，域名支持通配符，如：*.youxia.com，地址与权限中间没有空格，权限说明：
rw：read-write，可读写；
ro：read-only，只读；
sync：文件同时写入硬盘和内存；
async：文件暂存于内存，而不是直接写入内存；
no_root_squash：NFS客户端连接服务端时如果使用的是root的话，那么对服务端分享的目录来说，也拥有root权限。显然开启这项是不安全的。
root_squash：NFS客户端连接服务端时如果使用的是root的话，那么对服务端分享的目录来说，拥有匿名用户权限，通常他将使用nobody或nfsnobody身份；
all_squash：不论NFS客户端连接服务端时使用什么用户，对服务端分享的目录来说都是拥有匿名用户权限；
anonuid：匿名用户的UID值，通常是nobody或nfsnobody，可以在此处自行设定；
anongid：匿名用户的GID值。</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="启动服务端"><em>启动服务端</em><a class="hash-link" href="#启动服务端" title="Direct link to heading">​</a></h2><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">service rpcbind startservice nfs start</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p><strong>客户端挂载</strong></p><h3 class="anchor anchorWithStickyNavbar_mojV" id="1创建需要挂载的目录">1、创建需要挂载的目录：<a class="hash-link" href="#1创建需要挂载的目录" title="Direct link to heading">​</a></h3><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">mkdir /usr/local/test</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h3 class="anchor anchorWithStickyNavbar_mojV" id="2测试挂载">2、测试挂载：<a class="hash-link" href="#2测试挂载" title="Direct link to heading">​</a></h3><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">showmount -e 10.1.1.52</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>3、挂载</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">mount -t nfs NFS_Server_IP:/usr/local/test/usr/local/test mount</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mount -t nfs 10.10.202.230:/hadoop/AD /hadoop/AD</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>NFS_Server_IP:/usr/local/test on /usr/local/testtype nfs (rw,vers=4,addr= NFS_Server_IP,clientaddr= NFS_Client_IP)&nbsp;</p><p>如果信息如上显示则挂载成功！</p><p>*<strong>*4、测试：**</strong></p><p>客户端新建一个文件：</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">cd /home/testecho "nfs test"&gt;&gt;test.txt</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>看一下服务端共享目录有此文件吗</p>]]></content:encoded>
            <category>nfs</category>
        </item>
        <item>
            <title><![CDATA[Kafka-集群教程,及若干配置说明]]></title>
            <link>https://shanjiancaofu.com/devops/install-cluster-kafka</link>
            <guid>install-cluster-kafka</guid>
            <pubDate>Mon, 01 Apr 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[前置需求]]></description>
            <content:encoded><![CDATA[<h4 class="anchor anchorWithStickyNavbar_mojV" id="前置需求">前置需求<a class="hash-link" href="#前置需求" title="Direct link to heading">​</a></h4><ul><li>3台装有JDK 8 的虚拟机</li><li>zookeeper 集群 3台</li><li>假设有3台机器, 192.168.17.81,192.168.17.82,192.168.17.83 分别个别名
修改 /etc/hosts 文件增加下面别名, 方面脚本操作</li></ul><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">192.168.17.81 zk01 kafka1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">192.168.17.82 zk02 kafka2 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">192.168.17.83 zk03 kafka3 </span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h4 class="anchor anchorWithStickyNavbar_mojV" id="安装教程">安装教程<a class="hash-link" href="#安装教程" title="Direct link to heading">​</a></h4><ol><li>$\color{#FF0000}{下载 kafka 安装包,并且分发安装包到另外2台机器}$
打开 kafka 发行版的下载页面 <code>http://kafka.apache.org/downloads</code>, 这里有很多的版本, 我们选取最新的一个版本下载</li></ol><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">cd /opt/soft</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">wget https://www.apache.org/dyn/closer.cgi?path=/kafka/2.6.0/kafka_2.12-2.6.0.tgz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">scp  kafka_2.12-2.6.0.tgz root@zk02:/opt/soft/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">scp  kafka_2.12-2.6.0.tgz root@zk03:/opt/soft/</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ol start="2"><li>$\color{#FF0000}{修改 hosts }$<ul><li>解压文件</li></ul></li></ol><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain"># 3台机器分别执行解压命令,和软连接命令</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tar -zxvf  kafka_2.12-2.6.0.tgz &amp;&amp; ln -s /opt/soft/kafka_2.12-2.6.0 kafka</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 进入kafka </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd kafka</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ul><li>修改配置文件  config/server.properties
这个文件需要修改的配置</li></ul><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain"># 这里的id , 3台机器必须不同</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">broker.id=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 这是新增的配置, 让topic 能够删除</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">delete.topic.enable=true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 新增的配置, 配置3 台机器的zk</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">zookeeper.connect=zk01:2181,zk02:2181,zk03:2181</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 修改配置</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">listeners=PLAINTEXT://=zk01:9092</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><blockquote><p> 如果意外没有修改delete.topic.enable=true , 如何删除kafka 的topic呢。 </p><ol><li>手动在zk 里面删除brokers/topics/主题名，、config/topics/主题名</li><li>删除kafka 的data， 一般在log.dir,或者log.dirs 的 目录删除和主题名为前缀的文件即可。</li></ol></blockquote><p>将这个文件分发到另外2台机器对应的目录, 然后 3台机器不同的地方主要是:</p><ul><li>broker.id=0, 这里的id , 3台机器必须不同</li><li>listeners=PLAINTEXT://=zk01:9092 , 这 zk01, 在另外两台分别替换成zk02,zk03</li></ul><ol start="3"><li><p>$\color{#FF0000}{常用命令}$
如下: </p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">-   启动:  `/opt/soft/kafka/bin/kafka-server-start.sh -daemon config/server.properties`</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><ul><li>关闭:  <code>bin/kafka-server-stop.sh stop</code></li><li>查看所有的 topic:   <code> bin/kafka-topics.sh --zookeeper zk01:2181 --list</code> , 这里的 zk01, </li><li>创建topic:  <code>bin/kafka-topics.sh  --zookeeper zk01:2181 --create --replication-factor 3 --partitions 1 --topic bade</code>
这里的zk01 是你zk的机器, replication-factor 定义复本数量,partitions 定义分区数量</li><li>创建topic 的时候增加配置 </li></ul><p>bin/kafka-topics.sh  --zookeeper zk01:2181 --create --replication-factor 3 --partitions 1 --topic bade --config max.message.bytes=10000</p><ul><li><p>修改opic 的时候删除配置 <code>bin/kafka-topics.sh  --zookeeper zk01:2181 --create --replication-factor 3 --partitions 1 --topic bade --delete_config max.message.bytes</code>	</p></li><li><p>删除topic:  <code>bin/kafka-topics.sh  --zookeeperhadoop102:2181  --delete --topic first </code> , 注意: 如果 你在 config/server.properties 里面没有定义 delete.topic.enable=true, 那么 topic 只是标记删除了</p></li><li><p>指定topic 发送消息:  <code>bin/kafka-console-producer.sh --broker-list hadoop102:9092 --topic  first</code> , 注意这里v的first 是topic 的名称</p></li><li><p>指定topic 消费消息: <code>bin/kafka-console-consumer.sh --bootstrap-server hadoop102:9092 --topic first</code></p></li><li><p>查看Topic详情: <code>bin/kafka-topics.sh  --zookeeper 192.168.17.81:2181 --describe --topic first</code> , 这里的first 是topic名称</p></li><li><p>修改topic 分区数量: <code>bin/kafka-topics.sh  --zookeeper 192.168.17.81:2181 --alter --topic first --partitions 6</code>
tips: 注意如果事通过key来计算分区，进行顺序消费，增加分区三思而后行。 分区数量只能增加不能减少。</p></li><li><p>查看不可用的分区 <code>bin/kafka-topics.sh  --zookeeper 192.168.17.83:2181 --describe --unavailable-partitions</code></p></li><li><p>查看覆盖配置的topic <code> bin/kafka-topics.sh  --zookeeper 192.168.17.83:2181 --describe --topics-with-overrides</code></p></li><li><p>查看包含失效的副本分区 <code>bin/kafka-topics.sh  --zookeeper 192.168.17.83:2181 --describe --under-replicated-partitions</code> </p></li><li><p>创建主题增加不存在才创建的配置 <code> bin/kafka-topics.sh  --zookeeper zk01:2181 --create --replication-factor 3 --partitions 1 --topic bade  --if-not-exists</code></p></li><li><p>修改主题配置存在主题才修改 <code>bin/kafka-topics.sh  --zookeeper 192.168.17.81:2181 --alter --topic first --partitions 6 --if-exists</code></p></li><li><p>新版配置管理kafka-config.sh</p></li></ul></li></ol><ol start="4"><li><p>$\color{#FF0000}{kakfa 配置说明}$
如下:  </p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">    1.    在我们生产环境中的ack 配置 是0. 不等待broker的ack, 提供一个最低的延迟, broker 没有写入磁盘就已经返回,可能丢失数据.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    2.    ack  = 1, 当partition的leader 的数据落盘就返回,如果在follower 同步成功之前leader 故障可能丢失诗句</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    3.    ack = -1, 当partition的leader 和follower 全部落地后才会返回ack, 如果在follower 同步完成后, broker 发送ack 之前 leader 发生故障, 那么将会造成重复</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div></li><li><p>$\color{#FF0000}{故障处理细节}$</p></li></ol><p>log文件的HW和LEO</p><p>LEO : LOG END OFFSET 每个复本最大的offset</p><p>HW: 指的是消费者能够见到的最大的offset, ISR 最小的LEO. </p><ul><li>follower  故障
<strong>follower 发生故障后会被临时踢出 ISR，待该 follower 恢复后，follower 会读取本地磁盘</strong><strong>记录的上次的 HW，并将 log 文件高于 HW 的部分截取掉，从 HW 开始向 leader 进行同步。</strong><strong>等该 follower  的 LEO  大于等于该 Partition 的 的 HW，即 follower 追上 leader 之后，就可以重</strong><strong>新加入 ISR 了。</strong></li><li>leader  故障
<strong>leader 发生故障之后，会从 ISR 中选出一个新的 leader，之后，为保证多个副本之间的数据一致性，其余的 follower 会先将各自的 log 文件高于 HW 的部分截掉，然后从新的 leader</strong><strong>同步数据。</strong>(注意： 这只能保证副本之间的数据一致性，并不能保证数据不丢失或者不重复)</li></ul><p>6  .  $\color{#FF0000}{测试consumer 是否重复消费的情况}$</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">```</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">在2台机器上执行(下面的ip要修改成自己机器的IP)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">bin/kafka-console-consumer.sh --bootstrap-server 192.168.17.82:9092 --topic bade --consumer.config config/consumer.properties</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">```</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><blockquote><p>如果发生这个错误</p><p>(id: -3 rack: null) disconnected (org.apache.kafka.clients.NetworkClient)</p></blockquote><div class="codeBlockContainer_I0IT language-shell theme-code-block"><div class="codeBlockContent_wNvx shell"><pre tabindex="0" class="prism-code language-shell codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">bin/kafka-console-consumer.sh --bootstrap-server </span><span class="token number" style="color:#36acaa">192.168</span><span class="token plain">.17.82:2181 --topic first --consumer.config config/consumer.properties</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>端口号的问题，以前启动消费者的时候监听的端口是 2181，但是新版本的kafka对zookeeper的依赖没有那么强烈了，所以改成了自己的 9092。  </p><div class="codeBlockContainer_I0IT language-shell theme-code-block"><div class="codeBlockContent_wNvx shell"><pre tabindex="0" class="prism-code language-shell codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">bin/kafka-console-consumer.sh --bootstrap-server </span><span class="token number" style="color:#36acaa">192.168</span><span class="token plain">.17.82:9092,192.168.17.82:9092,192.168.17.83:9092 --topic first --consumer.config config/consumer.properties</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><div class="codeBlockContainer_I0IT language-shell theme-code-block"><div class="codeBlockContent_wNvx shell"><pre tabindex="0" class="prism-code language-shell codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">bin/kafka-console-producer.sh --broker-list </span><span class="token number" style="color:#36acaa">192.168</span><span class="token plain">.17.81:9092 --topic first</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>你会发现consumer 的控制台显示的消息没有重复显示</p>]]></content:encoded>
            <category>kafka</category>
        </item>
        <item>
            <title><![CDATA[K8s的ingress-配置跨域和白名单]]></title>
            <link>https://shanjiancaofu.com/devops/k8s-ingress-cross-domain-whitelist</link>
            <guid>k8s-ingress-cross-domain-whitelist</guid>
            <pubDate>Wed, 20 Mar 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[配置跨域:]]></description>
            <content:encoded><![CDATA[<p>配置跨域:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">    nginx.ingress.kubernetes.io/Access-Control-Allow-Origin: 'http://12341234.s1.natapp.cc'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    nginx.ingress.kubernetes.io/cors-allow-headers: &gt;-</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      AUTHTOKEN,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified- </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     Since,Cache-Control,Content-Type,Authorization</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    nginx.ingress.kubernetes.io/cors-allow-methods: 'PUT, GET, POST, OPTIONS'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    nginx.ingress.kubernetes.io/cors-allow-origin: 'http://12342134.s1.natapp.cc'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    nginx.ingress.kubernetes.io/enable-access-log: 'true'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    nginx.ingress.kubernetes.io/enable-cors: 'true'</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>配置白名单:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">nginx.ingress.kubernetes.io/whitelist-source-range: &gt;-</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      19.19.29.12</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>配置路由规则</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">spec:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  tls:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    - hosts:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        - mysite</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      secretName: mysite.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  rules:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    - host: rzzm.h5cmpassport.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      http:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        paths:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          - path: '/abc*|adfd*|group[0-9]'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            pathType: ImplementationSpecific</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            backend:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              serviceName: mysiteservice</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              servicePort: 8083</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div>]]></content:encoded>
            <category>k8s</category>
        </item>
        <item>
            <title><![CDATA[docusaurus部署命令]]></title>
            <link>https://shanjiancaofu.com/devops/push-cmd</link>
            <guid>push-cmd</guid>
            <pubDate>Tue, 22 Jan 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[git_pass 请配置github的token]]></description>
            <content:encoded><![CDATA[<p>git_pass 请配置github的token</p><div class="codeBlockContainer_I0IT language-shell theme-code-block"><div class="codeBlockContent_wNvx shell"><pre tabindex="0" class="prism-code language-shell codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token assign-left variable" style="color:#36acaa">USE_SSH</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">git@github.com:jeesk/jeesk.github.io.git </span><span class="token assign-left variable" style="color:#36acaa">GIT_USER</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">jeesk </span><span class="token assign-left variable" style="color:#36acaa">GIT_PASS</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">  </span><span class="token function" style="color:#d73a49">yarn</span><span class="token plain"> deploy</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><blockquote><p> 路过点赞, 月薪10W</p></blockquote>]]></content:encoded>
            <category>blog</category>
        </item>
    </channel>
</rss>